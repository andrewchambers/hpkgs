(use ./prelude)
(import ./seed)
(import ./core)
(import ./community/busybox)

(defpkg new-seed
  :builder
  (fn []
    (os/setenv "PATH" (pkg-path "/bin" seed/seed))
    (sh/$ cp -rv ;(sh/glob (string (core/mcm-gcc :path) "/*")) (dyn :pkg-out))
    (sh/$ chmod -R +w (dyn :pkg-out))
    # XXX This is done for reproducibile build, is there a better way? 
    (os/rm ;(sh/glob (string (dyn :pkg-out) "/libexec/gcc/x86_64-linux-musl/*/install-tools/fixincl")))
    (sh/$ cp (pkg-path "/bin/busybox" busybox/busybox) (string (dyn :pkg-out) "/bin"))
    (os/cd (string (dyn :pkg-out) "/bin"))
    (each app (string/split "\n" (sh/$<_ ./busybox --list))
      # strings comes from gcc/binutils.
      (unless (os/lstat app)
        (os/symlink "./busybox" app)))))

(defpkg seed-out
  :content {"seed.tar.gz" {:content seed/seed-hash}}
  :builder
  (fn []
    (os/setenv "LC_ALL" "C")
    (os/setenv "PATH" (join-pkg-paths ":" "/bin" [core/tar core/gzip new-seed]))
    (os/cd (new-seed :path))
    (with [f (file/open (string (dyn :pkg-out) "/seed.tar.gz") :wb+)]
      (sh/$
        find .
        |grep -v ".hpkg.jdn"
        |sort
        |tar --owner=root:0 --group=root:0 "--mtime=UTC 2019-01-01" --no-recursion -v -T - -cf -
        |gzip -9
        > ,f))))
